
services:
  # Nodo IPFS principal (Kubo)
  ipfs-node:
    image: ipfs/kubo:latest
    container_name: music-ipfs-node
    ports:
      - "4001:4001"     # Swarm port
      - "5001:5001"     # API port
      - "8080:8080"     # Gateway port (interno)
    volumes:
      - ./data/ipfs:/data/ipfs
    environment:
      - IPFS_PROFILE=server
      - IPFS_PATH=/data/ipfs
    restart: unless-stopped
    networks:
      - ipfs-network

  # Private Gateway Proxy con validación de CIDs
  gateway-proxy:
    build: 
      context: ./gateway-proxy
      dockerfile: Dockerfile
    container_name: music-private-gateway
    ports:
      - "3001:3001"     # Puerto público del gateway
    env_file:
      - ./gateway-proxy/.env
    depends_on:
      - ipfs-node
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - ipfs-network

  # Cache Redis para contenido frecuente
  redis:
    image: redis:7-alpine
    container_name: music-redis-cache
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - ipfs-network

  # Base de datos para indexación
  postgres:
    image: postgres:15-alpine
    container_name: music-postgres-gateway
    ports:
      - "5433:5432"     # Puerto diferente para no conflicto
    environment:
      - POSTGRES_DB=music_gateway
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=t2nhWvXNgtxkU7iywPuioHjpl
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - ipfs-network

  # Monitoreo opcional (Prometheus + Grafana)
  prometheus:
    image: prom/prometheus:latest
    container_name: music-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - ipfs-network
    profiles:
      - monitoring

networks:
  ipfs-network:
    driver: bridge

volumes:
  ipfs-data:
  redis-data:
  postgres-data:
  prometheus-data:
